"""Utility modules for research assistant.

This package provides logging, formatting, error handling, and retry utilities.

Example:
    >>> from research_assistant.utils import setup_logging, get_logger
    >>> from research_assistant.utils import retry_with_backoff
    >>> setup_logging(level="INFO")
    >>> logger = get_logger(__name__)
"""

# Base exceptions; Configuration; Analyst; Interview; Search; Report;
# LLM; State; Graph; Data; File; Utilities
from .exceptions import (
    AnalystCreationError,
    AnalystError,
    AnalystValidationError,
    AnswerGenerationError,
    ConfigurationError,
    DataError,
    DataTransformationError,
    DataValidationError,
    FileError,
    FileReadError,
    FileWriteError,
    GraphError,
    GraphExecutionError,
    GraphInterruptError,
    InsufficientAnalystsError,
    InterviewError,
    InterviewTimeoutError,
    InvalidFileFormatError,
    InvalidReportFormatError,
    InvalidStateError,
    LLMAPIError,
    LLMError,
    LLMResponseError,
    LLMTimeoutError,
    MissingAPIKeyError,
    MissingSectionsError,
    MissingStateFieldError,
    NodeExecutionError,
    NoSearchResultsError,
    QuestionGenerationError,
    RateLimitError,
    ReportError,
    ReportSynthesisError,
    ResearchAssistantError,
    SearchError,
    SearchTimeoutError,
    SectionGenerationError,
    StateError,
    StateValidationError,
    TokenLimitError,
    WebSearchError,
    WikipediaSearchError,
    format_error_for_logging,
    get_error_context,
    is_recoverable_error,
)
from .formatting import (
    colorize_text,
    create_filename,
    export_to_html,
    export_to_json,
    format_analyst_summary,
    format_citation_list,
    format_duration,
    format_error_report,
    format_file_size,
    format_key_value_pairs,
    format_list,
    format_metrics_report,
    format_number,
    format_progress_bar,
    format_report_metadata,
    format_table,
    format_timestamp,
    sanitize_for_filename,
    save_report,
    truncate_text,
)
from .logging import (
    ExecutionMetrics,
    configure_from_config,
    get_logger,
    get_metrics,
    log_execution,
    log_function_call,
    log_metrics_summary,
    log_operation,
    log_performance,
    reset_metrics,
    setup_logging,
    setup_structlog,
)
from .retry import (
    CircuitBreakerConfig,
    CircuitState,
    FallbackHandler,
    RetryConfig,
    get_circuit_breaker,
    get_circuit_breaker_status,
    get_retry_delay,
    reset_circuit_breaker,
    retry_llm_call,
    retry_on_rate_limit,
    retry_search_call,
    retry_with_backoff,
    safe_execute,
    should_retry,
    with_circuit_breaker,
    with_fallback,
    with_timeout,
)

__all__ = [
    # Logging
    "setup_logging",
    "setup_structlog",
    "get_logger",
    "log_execution",
    "log_operation",
    "log_function_call",
    "log_performance",
    "get_metrics",
    "reset_metrics",
    "log_metrics_summary",
    "configure_from_config",
    "ExecutionMetrics",
    # Formatting
    "format_timestamp",
    "format_duration",
    "format_number",
    "format_report_metadata",
    "format_analyst_summary",
    "format_metrics_report",
    "save_report",
    "export_to_json",
    "export_to_html",
    "create_filename",
    "format_progress_bar",
    "format_table",
    "format_list",
    "truncate_text",
    "format_citation_list",
    "colorize_text",
    "format_key_value_pairs",
    "format_error_report",
    "sanitize_for_filename",
    "format_file_size",
    # Exceptions
    "ResearchAssistantError",
    "ConfigurationError",
    "MissingAPIKeyError",
    "AnalystError",
    "AnalystCreationError",
    "AnalystValidationError",
    "InsufficientAnalystsError",
    "InterviewError",
    "QuestionGenerationError",
    "AnswerGenerationError",
    "InterviewTimeoutError",
    "SearchError",
    "WebSearchError",
    "WikipediaSearchError",
    "SearchTimeoutError",
    "RateLimitError",
    "NoSearchResultsError",
    "ReportError",
    "SectionGenerationError",
    "ReportSynthesisError",
    "MissingSectionsError",
    "InvalidReportFormatError",
    "LLMError",
    "LLMAPIError",
    "LLMTimeoutError",
    "LLMResponseError",
    "TokenLimitError",
    "StateError",
    "InvalidStateError",
    "MissingStateFieldError",
    "StateValidationError",
    "GraphError",
    "GraphExecutionError",
    "NodeExecutionError",
    "GraphInterruptError",
    "DataError",
    "DataValidationError",
    "DataTransformationError",
    "FileError",
    "FileReadError",
    "FileWriteError",
    "InvalidFileFormatError",
    "is_recoverable_error",
    "get_error_context",
    "format_error_for_logging",
    # Retry & Circuit Breaker
    "RetryConfig",
    "CircuitBreakerConfig",
    "CircuitState",
    "get_circuit_breaker",
    "retry_with_backoff",
    "retry_on_rate_limit",
    "with_circuit_breaker",
    "with_timeout",
    "retry_llm_call",
    "retry_search_call",
    "FallbackHandler",
    "with_fallback",
    "safe_execute",
    "should_retry",
    "get_retry_delay",
    "reset_circuit_breaker",
    "get_circuit_breaker_status",
]
